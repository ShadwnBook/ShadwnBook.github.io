<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shadwn Blog</title>
    <link>https://ShadwnBook.github.io/docs/%E4%BD%9C%E5%93%81/</link>
    <description>Recent content on Shadwn Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language><atom:link href="https://ShadwnBook.github.io/docs/%E4%BD%9C%E5%93%81/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://ShadwnBook.github.io/docs/%E4%BD%9C%E5%93%81/buttons/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ShadwnBook.github.io/docs/%E4%BD%9C%E5%93%81/buttons/</guid>
      <description>Buttons#Buttons are styled links that can lead to local page or external link.
Example#{{&amp;lt; button relref=&amp;#34;/&amp;#34; [class=&amp;#34;...&amp;#34;] &amp;gt;}}Get Home{{&amp;lt; /button &amp;gt;}} {{&amp;lt; button href=&amp;#34;https://github.com/alex-shpak/hugo-book&amp;#34; &amp;gt;}}Contribute{{&amp;lt; /button &amp;gt;}} Get HomeContribute</description>
    </item>
    
    <item>
      <title></title>
      <link>https://ShadwnBook.github.io/docs/%E4%BD%9C%E5%93%81/columns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ShadwnBook.github.io/docs/%E4%BD%9C%E5%93%81/columns/</guid>
      <description>Columns#Columns help organize shorter pieces of content horizontally for readability.
{{&amp;lt; columns &amp;gt;}} &amp;lt;!-- begin columns block --&amp;gt; # Left Content Lorem markdownum insigne... &amp;lt;---&amp;gt; &amp;lt;!-- magic separator, between columns --&amp;gt; # Mid Content Lorem markdownum insigne... &amp;lt;---&amp;gt; &amp;lt;!-- magic separator, between columns --&amp;gt; # Right Content Lorem markdownum insigne... {{&amp;lt; /columns &amp;gt;}} Example#Left Content#Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter!</description>
    </item>
    
    <item>
      <title></title>
      <link>https://ShadwnBook.github.io/docs/%E4%BD%9C%E5%93%81/details/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ShadwnBook.github.io/docs/%E4%BD%9C%E5%93%81/details/</guid>
      <description>Details#Details shortcode is a helper for details html5 element. It is going to replace expand shortcode.
Example#{{&amp;lt; details &amp;#34;Title&amp;#34; [open] &amp;gt;}} ## Markdown content Lorem markdownum insigne... {{&amp;lt; /details &amp;gt;}} {{&amp;lt; details title=&amp;#34;Title&amp;#34; open=true &amp;gt;}} ## Markdown content Lorem markdownum insigne... {{&amp;lt; /details &amp;gt;}} TitleMarkdown content#Lorem markdownum insigne&amp;hellip;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://ShadwnBook.github.io/docs/%E4%BD%9C%E5%93%81/expand/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ShadwnBook.github.io/docs/%E4%BD%9C%E5%93%81/expand/</guid>
      <description>Expand#Expand shortcode can help to decrease clutter on screen by hiding part of text. Expand content by clicking on it.
Example#Default#{{&amp;lt; expand &amp;gt;}} ## Markdown content Lorem markdownum insigne... {{&amp;lt; /expand &amp;gt;}} Expand↕Markdown content#Lorem markdownum insigne&amp;hellip;With Custom Label#{{&amp;lt; expand &amp;#34;Custom Label&amp;#34; &amp;#34;...&amp;#34; &amp;gt;}} ## Markdown content Lorem markdownum insigne... {{&amp;lt; /expand &amp;gt;}} Custom Label...Markdown content#Lorem markdownum insigne.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://ShadwnBook.github.io/docs/%E4%BD%9C%E5%93%81/hints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ShadwnBook.github.io/docs/%E4%BD%9C%E5%93%81/hints/</guid>
      <description>Hints#Hint shortcode can be used as hint/alerts/notification block.
There are 3 colors to choose: info, warning and danger.
{{&amp;lt; hint [info|warning|danger] &amp;gt;}} **Markdown content** Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa {{&amp;lt; /hint &amp;gt;}} Example#Markdown content
Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus TelethusaMarkdown content</description>
    </item>
    
    <item>
      <title></title>
      <link>https://ShadwnBook.github.io/docs/%E4%BD%9C%E5%93%81/katex/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ShadwnBook.github.io/docs/%E4%BD%9C%E5%93%81/katex/</guid>
      <description>KaTeX#KaTeX shortcode let you render math typesetting in markdown document. See KaTeX
Example#{{&amp;lt;/* katex [display] [class=&amp;#34;text-center&amp;#34;] */&amp;gt;}} f(x) = \int_{-\infty}^\infty\hat f(\xi)\,e^{2 \pi i \xi x}\,d\xi {{&amp;lt;/* /katex */&amp;gt;}} Display Mode Example#Here is some inline example: \(\pi(x)\), rendered in the same line. And below is display example, having display: block \[f(x) = \int_{-\infty}^\infty\hat f(\xi)\,e^{2 \pi i \xi x}\,d\xi\]Text continues here.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://ShadwnBook.github.io/docs/%E4%BD%9C%E5%93%81/mermaid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ShadwnBook.github.io/docs/%E4%BD%9C%E5%93%81/mermaid/</guid>
      <description>Mermaid Chart#MermaidJS is library for generating svg charts and diagrams from text.
Override Mermaid Initialization Config
To override the initialization config for Mermaid, create a mermaid.json file in your assets folder!
Example#{{&amp;lt;/* mermaid [class=&amp;#34;text-center&amp;#34;]*/&amp;gt;}} stateDiagram-v2 State1: The state with a note note right of State1 Important information! You can write notes. end note State1 --&amp;gt; State2 note left of State2 : This is the note to the left.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://ShadwnBook.github.io/docs/%E4%BD%9C%E5%93%81/pytube%E4%B8%8B%E8%BC%89yt%E5%BD%B1%E7%89%87/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ShadwnBook.github.io/docs/%E4%BD%9C%E5%93%81/pytube%E4%B8%8B%E8%BC%89yt%E5%BD%B1%E7%89%87/</guid>
      <description>使用pytube下載YT影片#下載pytube套件 執行terminal 在終端機貼上網址 會自動下載到桌面 程式碼如下：##conda install -c conda-forge pytube 如果一直讀不到可能需要直接在conda裡pip import os from pytube import YouTube def download_video(url, output_path): try: yt = YouTube(url) video = yt.streams.get_highest_resolution() video.download(output_path) print(&amp;#34;下載完成！&amp;#34;) except Exception as e: print(&amp;#34;發生錯誤：&amp;#34;, str(e)) # 輸入要下載的YouTube影片的URL video_url = input(&amp;#34;請輸入YouTube影片的URL_&amp;#34;) # 桌面路徑 desktop_path = os.path.expanduser(&amp;#34;~/Desktop&amp;#34;) download_video(video_url, desktop_path) </description>
    </item>
    
    <item>
      <title></title>
      <link>https://ShadwnBook.github.io/docs/%E4%BD%9C%E5%93%81/tabs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ShadwnBook.github.io/docs/%E4%BD%9C%E5%93%81/tabs/</guid>
      <description>Tabs#Tabs let you organize content by context, for example installation instructions for each supported platform.
{{&amp;lt; tabs &amp;#34;uniqueid&amp;#34; &amp;gt;}} {{&amp;lt; tab &amp;#34;MacOS&amp;#34; &amp;gt;}} # MacOS Content {{&amp;lt; /tab &amp;gt;}} {{&amp;lt; tab &amp;#34;Linux&amp;#34; &amp;gt;}} # Linux Content {{&amp;lt; /tab &amp;gt;}} {{&amp;lt; tab &amp;#34;Windows&amp;#34; &amp;gt;}} # Windows Content {{&amp;lt; /tab &amp;gt;}} {{&amp;lt; /tabs &amp;gt;}} Example#MacOSMacOS#This is tab MacOS content.
Lorem markdownum insigne. Olympo signis Delphis!</description>
    </item>
    
    <item>
      <title></title>
      <link>https://ShadwnBook.github.io/docs/%E4%BD%9C%E5%93%81/%E5%BD%B1%E7%89%87%E8%87%AA%E5%8B%95%E5%A5%97%E6%A1%86/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ShadwnBook.github.io/docs/%E4%BD%9C%E5%93%81/%E5%BD%B1%E7%89%87%E8%87%AA%E5%8B%95%E5%A5%97%E6%A1%86/</guid>
      <description>影片自動套框功能開發#import osimport subprocessimport cv2import numpy as np# 設定影片和圖片框的資料夾路徑videos_folder = r&amp;#39;C:\Users\shadwn\Desktop\Auto_FRAMED\JP&amp;#39;frames_folder = r&amp;#39;C:\Users\shadwn\Desktop\Auto_FRAMED\JP&amp;#39;output_folder = r&amp;#39;C:\Users\shadwn\Desktop\Auto_FRAMED\JP&amp;#39;# 取得影片和圖片框的清單for video_file in os.listdir(videos_folder):if video_file.endswith(&amp;#39;.mp4&amp;#39;):video_name = os.path.splitext(video_file)[0]video_path = os.path.join(videos_folder, video_file)# 取得圖片框的寬度和高度for frame_file in os.listdir(frames_folder):if frame_file.endswith(&amp;#39;.png&amp;#39;):frame_name = os.path.splitext(frame_file)[0]frame_path = os.path.join(frames_folder, frame_file)video_output = os.path.join(output_folder, f&amp;#39;{video_name}_{frame_name }.mp4&amp;#39;)# 讀取圖片image = cv2.imread(frame_path , cv2.IMREAD_UNCHANGED)# 提取Alpha通道alpha_channel = image[:, :, 3]# 找到alpha值為0的像素的位置indices = np.</description>
    </item>
    
  </channel>
</rss>
